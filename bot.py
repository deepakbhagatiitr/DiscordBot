import discord
from discord.ext import commands
import json
from pymongo import MongoClient
import random
from dotenv import load_dotenv
import os

  # Load environment variables
load_dotenv()

# Discord bot setup with all required intents
intents = discord.Intents.all()  
intents.message_content = True  
intents.members = True          
bot = commands.Bot(command_prefix='!', intents=intents)

  # Mock GenAI response (simulating xAI API)
def get_genai_response(query):
      return f"Mock response for: {query} (Generated by Grok 3)"

  # MongoDB setup
client = MongoClient(os.getenv('MONGODB_URI'))
db = client['studybot']
users = db['users']

  # Load sample questions
with open('data/sample_questions.json', 'r') as f:
      questions = json.load(f)

@bot.event
async def on_ready():
      print(f'Bot is ready as {bot.user}')
      print(f"MongoDB connected: {client is not None}")

@bot.command()
async def math(ctx, *, problem):
      response = get_genai_response(problem)
      await ctx.send(response)
      user_id = str(ctx.author.id)
      users.update_one({'_id': user_id}, {'$inc': {'problems_solved': 1}}, upsert=True)

@bot.command()
async def quiz(ctx, subject="math"):
      if subject in questions and len(questions[subject]) > 0:
          question = random.choice(questions[subject])
          await ctx.send(f"Quiz: {question['question']}\nAnswer with !answer <your_answer>")
      else:
          await ctx.send(f"No questions available for the subject: {subject}")

@bot.command()
async def answer(ctx, *, answer):
      await ctx.send("Answer recorded!")
      user_id = str(ctx.author.id)
      users.update_one({'_id': user_id}, {'$inc': {'quizzes_completed': 1}}, upsert=True)

@bot.command()
async def progress(ctx):
      user_id = str(ctx.author.id)
      user = users.find_one({'_id': user_id})
      if user:
          await ctx.send(f"Progress: Problems Solved: {user.get('problems_solved', 0)}, Quizzes Completed: {user.get('quizzes_completed', 0)}")
      else:
          await ctx.send("No progress yet!")

bot.run(os.getenv('DISCORD_TOKEN'))