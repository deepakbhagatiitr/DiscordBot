import discord
from discord.ext import commands
import json
from pymongo import MongoClient
import random

intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)

# Mock GenAI response (simulating xAI API)
def get_genai_response(query):
    return f"Mock response for: {query} (Generated by Grok 3)"

# MongoDB setup
client = MongoClient('mongodb://localhost:27017/')
db = client['studybot']
users = db['users']

# Load sample questions
with open('data/sample_questions.json', 'r') as f:
    questions = json.load(f)

@bot.event
async def on_ready():
    print(f'Bot is ready as {bot.user}')

@bot.command()
async def math(ctx, *, problem):
    response = get_genai_response(problem)
    await ctx.send(response)
    user_id = str(ctx.author.id)
    users.update_one({'_id': user_id}, {'$inc': {'problems_solved': 1}}, upsert=True)

@bot.command()
async def quiz(ctx, subject="math"):
    if subject in questions:
        question = random.choice(questions[subject])
        await ctx.send(f"Quiz: {question['question']}\nAnswer with !answer <your_answer>")
    else:
        await ctx.send("Subject not found!")

@bot.command()
async def answer(ctx, *, answer):
    await ctx.send("Answer recorded! (Mock evaluation: Correct!)")
    user_id = str(ctx.author.id)
    users.update_one({'_id': user_id}, {'$inc': {'quizzes_completed': 1}}, upsert=True)

@bot.command()
async def progress(ctx):
    user_id = str(ctx.author.id)
    user = users.find_one({'_id': user_id})
    if user:
        await ctx.send(f"Progress: Problems Solved: {user.get('problems_solved', 0)}, Quizzes Completed: {user.get('quizzes_completed', 0)}")
    else:
        await ctx.send("No progress yet!")

bot.run('YOUR_DISCORD_BOT_TOKEN')